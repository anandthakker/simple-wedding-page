// Generated by CoffeeScript 1.6.3
(function() {
  angular.module("athreadofsomething", ["ngRoute", "firebase"]).config(function($routeProvider) {
    return $routeProvider.when('/rsvp-responses/:loc', {
      templateUrl: "responseList.html",
      controller: "RsvpListCtrl"
    }).when('/recommendations', {
      templateUrl: 'recList.html',
      controller: 'RecListCtrl'
    }).when('/:scrollTo', {
      templateUrl: "main.html"
    }).otherwise({
      templateUrl: "main.html"
    });
  }).controller("RecCtrl", function($scope) {
    return $scope.recommendation = {};
  }).controller("RsvpCtrl", function($scope) {
    var ref;
    $scope.rsvp = {
      attending: true
    };
    ref = new Firebase('https://athreadofsomething.firebaseio.com/accepting/');
    return ref.on('value', function(snap) {
      return $scope.$apply(function() {
        return $scope.showRsvp = snap.val();
      });
    });
  }).controller("RsvpListCtrl", function($scope, $routeParams, $firebase) {
    var ref;
    ref = new Firebase("https://athreadofsomething.firebaseio.com/rsvp/" + $routeParams.loc);
    $scope.responses = $firebase(ref);
    return $scope.loc = $routeParams.loc;
  }).controller("RecListCtrl", function($scope, $firebase) {
    var ref;
    ref = new Firebase("https://athreadofsomething.firebaseio.com/recommendations");
    return $scope.recommendations = $firebase(ref);
  }).directive("firebaseForm", function($firebase, $interpolate) {
    return {
      restrict: "A",
      replace: true,
      transclude: true,
      template: "<div class=\"firebase-form\">\n  <div class=\"message error\" ng-show=\"error\">\n    {{errorMsg}}\n  </div>\n\n  <form ng-show=\"error || (!success && !saving)\" ng-transclude>\n  </form>\n\n  <div class=\"message waiting\" ng-show=\"saving\">\n    {{waitingMsg}}\n  </div>\n  <div class=\"message success\" ng-show=\"success\">\n    {{successMsg}}\n  </div>\n\n</div>\n",
      link: function(scope, element, attrs) {
        var db;
        db = new Firebase(attrs.firebaseUrl);
        scope.saving = null;
        scope.success = null;
        scope.error = null;
        return scope.save = function() {
          var data, newRef, _ref;
          scope.saving = true;
          scope.waitingMsg = $interpolate((_ref = attrs.waitingMsg) != null ? _ref : "Saving...")(scope);
          data = scope.$eval(attrs.firebaseFormData);
          newRef = db.push();
          return newRef.set(data, function(error) {
            return scope.$apply(function() {
              var _ref1, _ref2;
              scope.saving = false;
              if (error != null) {
                scope.error = error;
                return scope.errorMsg = $interpolate((_ref1 = attrs.errorMsg) != null ? _ref1 : "There was a problem saving your response.")(scope);
              } else {
                scope.success = true;
                return scope.successMsg = $interpolate((_ref2 = attrs.successMsg) != null ? _ref2 : "Thank you. Your response has been saved.")(scope);
              }
            });
          });
        };
      }
    };
  }).directive("stickyNav", function() {
    return {
      restrict: "A",
      link: function(scope, element, attrs) {
        return $(function() {
          var navigation_links, navigation_listItems;
          $('nav').waypoint('sticky');
          /*
          Code below borrowed from https://github.com/bmgdev/responsive-wedding/blob/master/js/main-1.6.js
          Copyright Â© Scal.io, LLC Bradley Greenwood
          */

          navigation_listItems = $('nav li');
          navigation_links = $('nav li a');
          $('#container>section').waypoint({
            handler: function(direction) {
              var active_listItem, active_section;
              active_section = void 0;
              active_section = $(this);
              if (direction === "up") {
                active_section = active_section.prev();
              }
              active_listItem = $("nav a[href=\"#" + active_section.attr("id") + "\"]").parent();
              navigation_listItems.removeClass("selected");
              active_listItem.addClass("selected");
            }
          });
          return navigation_links.click(function(event) {
            var newActive;
            newActive = $(this);
            $.scrollTo($(this).attr("href"), {
              duration: 1000,
              offset: {
                left: 0,
                top: -0.08 * $(window).height()
              },
              onAfter: function() {
                navigation_listItems.removeClass("selected");
                return newActive.parent().addClass("selected");
              }
            });
            event.preventDefault();
          });
        });
      }
    };
  });

}).call(this);
